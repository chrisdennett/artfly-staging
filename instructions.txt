Serve dev as https
Powershell: ($env:HTTPS = "true") -and (npm start)
cmd.exe: set HTTPS=true&&npm start

********************************************************************************
********************************************************************************
BUILD AND DEPLOY
// 1. change the IN_STAGING flag as necessary in GLOBAL_CONSTANTS.js

// 2. build the app
npm run build

// 3. test the build runs as expected
serve -s build

// 4. Set to staging or default (production):
firebase use staging
firebase use default

// 5. deploy to firebase
firebase deploy --only hosting
firebase deploy

// 6. open site
firebase open hosting:site

// 7. Merge dev branch into main
// start on dev branch.  Check with 'git branch', set with 'git checkout dev' // https://stackoverflow.com/questions/14168677/merge-development-branch-with-master
1. make sure everything is checked into dev
2. git merge master        //(resolve any merge conflicts if there are any)
3. git checkout master
4. git merge dev
5. git push -u origin master

// DEPLOY FUNCTIONS
firebase deploy --only functions
firebase deploy --only hosting
// can restrict to individual functions and other stuff...
// https://firebase.google.com/docs/cli/
firebase deploy --only functions:subscriptionEvent

// open some other part of the firebase project using
firebase open
// and select the option

// SAMPLE THUMBNAIL FUNCTION
https://github.com/firebase/functions-samples/blob/master/generate-thumbnail/functions/index.js

********************************************************************************
********************************************************************************

// Firebase throwing an error
firebase_app__WEBPACK_IMPORTED_MODULE_0___default.a.firestore is not a function
// after trying lots of things I eventually solved this by deleting node_modules
// directory and running npm init again.

// to fake a subscription on staging
// send a test webhook from paddle
// go here

// fill in like this
Alert to Simulate: Subscription Created
Test URL:               https://us-central1-artfly-staging.cloudfunctions.net/subscriptionEvent
email:                  chrisdennett@googlemail.com (buyers email address)
subscription_plan_id:   516947
passthrough:            EXS9OFRuWEWWJIBR8W35IStTjuk1 (this is the user uid from firebase)
currency:               GBP

********************************************************************************

// npm update not working - try deleting package lock file.
https://github.com/npm/npm/issues/20954

// Upgrading npm.  Follow the instructions here:
https://github.com/felixrieseberg/npm-windows-upgrade

// google version control repo
https://console.cloud.google.com/code/develop/browse/main/master?project=artfly-blog
When following the instructions got add a repo the command over two lines isn't correct
there's an extra \ in the middle to separate the lines.  If you run this, to change it open
VLC > GIT > Remotes

********************************************************************************

FIREBASE SDK
https://firebase.google.com/docs/functions/get-started#set_up_and_initialize_functions_sdk

In many cases, new features and bug fixes are available only with the latest version of the Firebase CLI and the firebase-functions SDK. It's a good practice to frequently update both the Firebase CLI and the SDK with these commands inside the functions folder of your Firebase project:

npm install firebase-functions@latest firebase-admin@latest --save
npm install -g firebase-tools


********************************************************************************
********************************************************************************

// commit changes to git
CTRL K - use the version control panel to check changes - and push at the same time

// then in terminal push the changes to google
git push google master

// or use
CTRL SHIFT K

// merge dev branch into master
// first make sure everything is checked in, then
git checkout master  //Switched to branch 'master'
git merge dev

// Then push master back up to google repo CTRL SHIFT K

********************************************************************************
********************************************************************************

CORS
There was a cross domain error - change when go live

// https://stackoverflow.com/questions/37760695/firebase-storage-and-access-control-allow-origin/37765371#37765371
[
  {
    "origin": ["https://example.com"],
    "method": ["GET"],
    "maxAgeSeconds": 3600
  }
]


********************************************************************************
********************************************************************************

http://slimimagecropper.com/

********************************************************************************
********************************************************************************

Git commands
//When adding a remote google repo
git remote -v // lists all the remote repos use git ui in folder to remove them



********************************************************************************
********************************************************************************

// OLD GIT (ho, ho, I mean the previously used GIT process) - LONG-WINDED WAY
// using terminal
// add to google ->
https://console.cloud.google.com/code/develop/browse/artfly/master?project=art-blam
git push --all google

git username:
chrisdennett@gmail.com

password:
1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo

// after pasting in the password you won't see the terminal change, just press enter

********************************************************************************
********************************************************************************
********************************************************************************

// Url after generating password said this:
Git Credentials

This is your Git username:

chrisdennett@gmail.com
This is your Git password:

1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo
To use this password, add the following text to your .netrc file:

machine source.developers.google.com login chrisdennett@gmail.com password 1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo
Instructions for Removing Cookies

If your Git client includes cookies in its request to source.developers.google.com, authorization may fail. Follow these steps to ensure correct behavior:

Identify your Git cookie file.

Run this command in your terminal:

git config http.cookiefile
The output is the path to your Git cookie file. If the command produces no output, then you have no Git cookie file and you are done.
Identify the Cloud Source Repositories cookie in the Git cookie file.

Open your Git cookie file in a text editor. Find the line that begins with source.developers.google.com. This is your Cloud Source Repositories cookie.

If no line begins with source.developers.google.com, then you are not sending a Cloud Source Repositories cookie and you are done.
Revoke the OAuth token in the Cloud Source Repositories cookie.

If your cookie contains an OAuth refresh token (a value matching the regular expression 1/[-_A-Za-z0-9]+), then revoke the token. You can revoke the token by making a request to https://accounts.google.com/o/oauth2/revoke and including the token as a parameter:

curl https://accounts.google.com/o/oauth2/revoke?token={token}
Delete the Cloud Source Repositories cookie from the Git cookie file.

Delete the line you identified in Step 2. Save the Git cookie file and close your editor.
Learn more about using Cloud Source Repositories.

********************************************************************************

Storage rules:
function isCurrentUser(uid){
	return request.auth.uid == uid;
}
function isImage(){
	return request.resource.contentType.matches("image/.*");
}
service firebase.storage {
  match /b/art-blam.appspot.com/o {
    match /userContent/{uid}/{filename} {
      allow read;
      allow write: if request.resource == null ||
      								isCurrentUser(uid) &&
                      request.resource != null;
    }
  }
}