********************************************************************************
********************************************************************************

// commit changes to git
CTRL K - use the version control panel to check changes - and push at the same time

// then in terminal push the changes to google
git push google master

********************************************************************************
********************************************************************************

CORS
There was a cross domain error - change when go live

// https://stackoverflow.com/questions/37760695/firebase-storage-and-access-control-allow-origin/37765371#37765371
[
  {
    "origin": ["https://example.com"],
    "method": ["GET"],
    "maxAgeSeconds": 3600
  }
]

gsutil cors set cors.json gs://art-blam.appspot.com

********************************************************************************
********************************************************************************

// OLD GIT (ho, ho, I mean the previously used GIT process) - LONG-WINDED WAY
// using terminal
// add to google ->
https://console.cloud.google.com/code/develop/browse/artfly/master?project=art-blam
git push --all google

git username:
chrisdennett@gmail.com

password:
1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo

// after pasting in the password you won't see the terminal change, just press enter

********************************************************************************
********************************************************************************
********************************************************************************

// Url after generating password said this:
Git Credentials

This is your Git username:

chrisdennett@gmail.com
This is your Git password:

1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo
To use this password, add the following text to your .netrc file:

machine source.developers.google.com login chrisdennett@gmail.com password 1/wCnRJyzb2wjk2VNFmgl3mO9rgprZl5awlV5casbznUo
Instructions for Removing Cookies

If your Git client includes cookies in its request to source.developers.google.com, authorization may fail. Follow these steps to ensure correct behavior:

Identify your Git cookie file.

Run this command in your terminal:

git config http.cookiefile
The output is the path to your Git cookie file. If the command produces no output, then you have no Git cookie file and you are done.
Identify the Cloud Source Repositories cookie in the Git cookie file.

Open your Git cookie file in a text editor. Find the line that begins with source.developers.google.com. This is your Cloud Source Repositories cookie.

If no line begins with source.developers.google.com, then you are not sending a Cloud Source Repositories cookie and you are done.
Revoke the OAuth token in the Cloud Source Repositories cookie.

If your cookie contains an OAuth refresh token (a value matching the regular expression 1/[-_A-Za-z0-9]+), then revoke the token. You can revoke the token by making a request to https://accounts.google.com/o/oauth2/revoke and including the token as a parameter:

curl https://accounts.google.com/o/oauth2/revoke?token={token}
Delete the Cloud Source Repositories cookie from the Git cookie file.

Delete the line you identified in Step 2. Save the Git cookie file and close your editor.
Learn more about using Cloud Source Repositories.